{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "Assigment2_T4_KB_Ed.ipynb",
      "provenance": [],
      "collapsed_sections": []
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    },
    "accelerator": "GPU",
    "widgets": {
      "application/vnd.jupyter.widget-state+json": {
        "b2e289dcaff7450d92b0bb436e562d76": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HBoxModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "HBoxView",
            "_dom_classes": [],
            "_model_name": "HBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_bb4a3ce04c2641278b04624b6dce66e9",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_2ce000c2846f496e885a71cf69260c8d",
              "IPY_MODEL_6a1097d066444669bf685aae3b4df3f0",
              "IPY_MODEL_312b802b37694e11a4cd82782bebe336"
            ]
          }
        },
        "bb4a3ce04c2641278b04624b6dce66e9": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "2ce000c2846f496e885a71cf69260c8d": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HTMLModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "HTMLView",
            "style": "IPY_MODEL_41dc1097eae54be69d3046aed2d56be2",
            "_dom_classes": [],
            "description": "",
            "_model_name": "HTMLModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": "Dl Completed...: 100%",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_d42038fe53f24e75b85f2271eb34119a"
          }
        },
        "6a1097d066444669bf685aae3b4df3f0": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_ff39aef18aac4b31af45cdc6f9bb6f86",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "success",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_6ad444104dd348c295454e4e8f20bc28"
          }
        },
        "312b802b37694e11a4cd82782bebe336": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HTMLModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "HTMLView",
            "style": "IPY_MODEL_339b62cff9cc46638da5f7c73f9b9fcd",
            "_dom_classes": [],
            "description": "",
            "_model_name": "HTMLModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 4/4 [01:55&lt;00:00, 31.65s/ url]",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_59cef6ba2aa240eb91720e924e8eab2d"
          }
        },
        "41dc1097eae54be69d3046aed2d56be2": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "d42038fe53f24e75b85f2271eb34119a": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "ff39aef18aac4b31af45cdc6f9bb6f86": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "6ad444104dd348c295454e4e8f20bc28": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": "20px",
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "339b62cff9cc46638da5f7c73f9b9fcd": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "59cef6ba2aa240eb91720e924e8eab2d": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "df32d1583679495d82dcd63f9ee496c3": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HBoxModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "HBoxView",
            "_dom_classes": [],
            "_model_name": "HBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_e0685bdbc447439281fb68d00f270aa0",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_a29ca925cd7f4ee099a97ee78c2357eb",
              "IPY_MODEL_737799e5bd514992b9cee6003c917ed0",
              "IPY_MODEL_6064239efdee43a09f2746bf9fedae6e"
            ]
          }
        },
        "e0685bdbc447439281fb68d00f270aa0": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "a29ca925cd7f4ee099a97ee78c2357eb": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HTMLModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "HTMLView",
            "style": "IPY_MODEL_92f84539e04b47d3b67b63fd9607a32c",
            "_dom_classes": [],
            "description": "",
            "_model_name": "HTMLModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": "Dl Size...: 100%",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_f4dba0dadedc4c4b9725f6c92f1520bb"
          }
        },
        "737799e5bd514992b9cee6003c917ed0": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_0131386f1f0b41228c854e9167909e06",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "success",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_4041af98134a4792bc92250d951cf6fc"
          }
        },
        "6064239efdee43a09f2746bf9fedae6e": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HTMLModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "HTMLView",
            "style": "IPY_MODEL_c7fd2c89a3ac465b9da7af18c0779e3f",
            "_dom_classes": [],
            "description": "",
            "_model_name": "HTMLModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 332825/332825 [01:55&lt;00:00, 362.13 MiB/s]",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_5da111a66ed04427816b2de40d5151bb"
          }
        },
        "92f84539e04b47d3b67b63fd9607a32c": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "f4dba0dadedc4c4b9725f6c92f1520bb": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "0131386f1f0b41228c854e9167909e06": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "4041af98134a4792bc92250d951cf6fc": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": "20px",
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "c7fd2c89a3ac465b9da7af18c0779e3f": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "5da111a66ed04427816b2de40d5151bb": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "63282a6e1a6247099301bec8388dedee": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HBoxModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "HBoxView",
            "_dom_classes": [],
            "_model_name": "HBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_e07590b26af24a3486443ba44838d203",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_2007812013b14769ba0e9f671440a387",
              "IPY_MODEL_79f3063f594240b195c378ca4280d6e1",
              "IPY_MODEL_523a02eeaaab4c459a6083635b54ee0d"
            ]
          }
        },
        "e07590b26af24a3486443ba44838d203": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "2007812013b14769ba0e9f671440a387": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HTMLModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "HTMLView",
            "style": "IPY_MODEL_e195c11e078c491fb4afff0bbc7de4af",
            "_dom_classes": [],
            "description": "",
            "_model_name": "HTMLModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": "Extraction completed...: 100%",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_aa08b5532ef640198c1293e4015e73e6"
          }
        },
        "79f3063f594240b195c378ca4280d6e1": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_9e609c26c993433887e6b8ef9e665452",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "success",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_e926301007564608b7274c0ff027cd4c"
          }
        },
        "523a02eeaaab4c459a6083635b54ee0d": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HTMLModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "HTMLView",
            "style": "IPY_MODEL_47aeb48ec1904cf8a9ec84934a5ea7c5",
            "_dom_classes": [],
            "description": "",
            "_model_name": "HTMLModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 3/3 [01:55&lt;00:00, 39.30s/ file]",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_8548c0d948324d9c8636a3d40a8b5950"
          }
        },
        "e195c11e078c491fb4afff0bbc7de4af": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "aa08b5532ef640198c1293e4015e73e6": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "9e609c26c993433887e6b8ef9e665452": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "e926301007564608b7274c0ff027cd4c": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": "20px",
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "47aeb48ec1904cf8a9ec84934a5ea7c5": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "8548c0d948324d9c8636a3d40a8b5950": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "2e244e03ed8d40ab9cee8706020e62a3": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HBoxModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "HBoxView",
            "_dom_classes": [],
            "_model_name": "HBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_465314a8105c405291a0f3681afe7453",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_ac7596f960c743258ae13a8c83d362bd",
              "IPY_MODEL_6a033b4e674d43e3ab6874ecf41ce625",
              "IPY_MODEL_49e379c4c2db46a5a96c7b8e30599d42"
            ]
          }
        },
        "465314a8105c405291a0f3681afe7453": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "ac7596f960c743258ae13a8c83d362bd": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HTMLModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "HTMLView",
            "style": "IPY_MODEL_68f212226758460baf6f754cae72ed62",
            "_dom_classes": [],
            "description": "",
            "_model_name": "HTMLModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": "Generating splits...: 100%",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_1b6ee733d6ab44e0a9b64f96172a047a"
          }
        },
        "6a033b4e674d43e3ab6874ecf41ce625": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_d70db000b4654af7a654fdb561deb6ee",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 2,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 2,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_7caeaae3f5fa4797877e916d1cca7f81"
          }
        },
        "49e379c4c2db46a5a96c7b8e30599d42": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HTMLModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "HTMLView",
            "style": "IPY_MODEL_8706246e6a3d40239955a05e7deec914",
            "_dom_classes": [],
            "description": "",
            "_model_name": "HTMLModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 2/2 [00:42&lt;00:00, 21.13s/ splits]",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_9ad0db6c4dca4213a9d3113370bc123a"
          }
        },
        "68f212226758460baf6f754cae72ed62": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "1b6ee733d6ab44e0a9b64f96172a047a": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "d70db000b4654af7a654fdb561deb6ee": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "7caeaae3f5fa4797877e916d1cca7f81": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "8706246e6a3d40239955a05e7deec914": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "9ad0db6c4dca4213a9d3113370bc123a": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "c3c7fde76c734602ae0e9e993a65fddd": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HBoxModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "HBoxView",
            "_dom_classes": [],
            "_model_name": "HBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_dd4d380517a7494f82ea68803897a7a5",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_515b036dbbf94ae2a782b299d75307bf",
              "IPY_MODEL_075b53778c5848d1bcb420000dfb1b01",
              "IPY_MODEL_662266d9f82e476283abd4ceb71ec403"
            ]
          }
        },
        "dd4d380517a7494f82ea68803897a7a5": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "515b036dbbf94ae2a782b299d75307bf": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HTMLModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "HTMLView",
            "style": "IPY_MODEL_248ee428bc1e414caf5fb19991dc2f88",
            "_dom_classes": [],
            "description": "",
            "_model_name": "HTMLModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": "Generating train examples...: ",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_5c72d6f3876c455b8c5ea9e4a60941e9"
          }
        },
        "075b53778c5848d1bcb420000dfb1b01": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_cbb484eeace546e4b073f74c2dd4071a",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "info",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 0,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_d4888c874d97478793367283b74c4fac"
          }
        },
        "662266d9f82e476283abd4ceb71ec403": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HTMLModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "HTMLView",
            "style": "IPY_MODEL_cd55de81d80b4f468c346726327f911c",
            "_dom_classes": [],
            "description": "",
            "_model_name": "HTMLModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 0/? [00:00&lt;?, ? examples/s]",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_05a5ad2bf6d6400e9071d83a39fc6429"
          }
        },
        "248ee428bc1e414caf5fb19991dc2f88": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "5c72d6f3876c455b8c5ea9e4a60941e9": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "cbb484eeace546e4b073f74c2dd4071a": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "d4888c874d97478793367283b74c4fac": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": "20px",
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "cd55de81d80b4f468c346726327f911c": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "05a5ad2bf6d6400e9071d83a39fc6429": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "f2b8069b2f0a495ebd8a8f802e1087c8": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HBoxModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "HBoxView",
            "_dom_classes": [],
            "_model_name": "HBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_cc347b8cdd454106b6e5936100474515",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_e21e25ade55c4c768f3923e3f0bf4192",
              "IPY_MODEL_97254e89361c4e8d865bf3f9fcdf8b20",
              "IPY_MODEL_286e64a347ef4bd281e0eed195ec8a0b"
            ]
          }
        },
        "cc347b8cdd454106b6e5936100474515": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "e21e25ade55c4c768f3923e3f0bf4192": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HTMLModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "HTMLView",
            "style": "IPY_MODEL_f3e70d1ae25243cca261d888930ebab3",
            "_dom_classes": [],
            "description": "",
            "_model_name": "HTMLModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": "Shuffling cars196-test.tfrecord...: 100%",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_506efa3e7b4042038749e8c09e3b650d"
          }
        },
        "97254e89361c4e8d865bf3f9fcdf8b20": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_28e43cb6e1a14dfb8c7216d2b9691d7d",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 8041,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 8041,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_c7122cee512a455996c145100800e50f"
          }
        },
        "286e64a347ef4bd281e0eed195ec8a0b": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HTMLModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "HTMLView",
            "style": "IPY_MODEL_29c985ca26c7456e89959cd254e18395",
            "_dom_classes": [],
            "description": "",
            "_model_name": "HTMLModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 8003/8041 [00:03&lt;00:00, 1908.87 examples/s]",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_07f86d9bce0544f59d8cb33cd07517e7"
          }
        },
        "f3e70d1ae25243cca261d888930ebab3": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "506efa3e7b4042038749e8c09e3b650d": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "28e43cb6e1a14dfb8c7216d2b9691d7d": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "c7122cee512a455996c145100800e50f": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "29c985ca26c7456e89959cd254e18395": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "07f86d9bce0544f59d8cb33cd07517e7": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        }
      }
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "zVwn2wR0UbHl"
      },
      "source": [
        "# ResNet-18"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "CIb19lc7C8lA"
      },
      "source": [
        "import numpy as np\n",
        "import matplotlib.pyplot as plt\n",
        "import os\n",
        "import cv2\n",
        "import shutil\n",
        "import tensorflow as tf\n",
        "from tensorflow.keras import *\n",
        "import keras"
      ],
      "execution_count": 1,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "JhF20Hd9Pb1D"
      },
      "source": [
        "##Cars196"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "j2BYI1CJ5h_7"
      },
      "source": [
        "https://medium.com/@mrgarg.rajat/training-on-large-datasets-that-dont-fit-in-memory-in-keras-60a974785d71"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "H8Rh5nsZQGPl"
      },
      "source": [
        "# Download the data\n",
        "import os.path\n",
        "import tarfile\n",
        "# Check if the file exists \n",
        "file_tag = os.path.exists('car_ims.tgz')\n",
        "if (file_tag == False):\n",
        "  !wget http://ai.stanford.edu/~jkrause/car196/car_ims.tgz\n",
        "  #!unzip -q car_ims.tgz && ls car_ims\n",
        "  tar = tarfile.open('car_ims.tgz', \"r:gz\")\n",
        "  tar.extractall()\n",
        "  tar.close()\n",
        "\n",
        "\n",
        "\n",
        "file_tag_an = os.path.exists('cars_annos.mat')\n",
        "if (file_tag_an == False):\n",
        "  !wget http://ai.stanford.edu/~jkrause/car196/cars_annos.mat\n",
        "import scipy.io as sio\n",
        "mat_cars_annos = sio.loadmat('cars_annos.mat')\n",
        "mat_meta=sio.loadmat('devkit/cars_meta.mat')\n",
        "mat_train=sio.loadmat('devkit/cars_train_annos.mat')"
      ],
      "execution_count": 9,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "9h14A7ZET1CG"
      },
      "source": [
        "## Cars FileName and Label arrays"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "t7DB9zUUVRFt"
      },
      "source": [
        "mat_annotations = mat_cars_annos['annotations']\n",
        "\n",
        "carfilenames=[]\n",
        "carclassies=[]\n",
        "\n",
        "for val in mat_annotations[0]:\n",
        "\n",
        "  carfilenames.append(val['relative_im_path'])\n",
        "  carclassies.append(val['class'][:,0])\n",
        "\n",
        "carclassies=np.array(carclassies)\n",
        "carfilenames=np.array(carfilenames)\n",
        "carfilenames=carfilenames[:,0]\n",
        "carclassies=carclassies[:,0]\n",
        "carclassies-=1\n"
      ],
      "execution_count": 122,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "vT_gmj4uUAao",
        "outputId": "fe805f76-ca04-4104-837b-e3cf3b508ede"
      },
      "source": [
        "print(carfilenames[1])\n",
        "print(carclassies[1])\n",
        "print(carclassies)"
      ],
      "execution_count": 123,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "car_ims/000002.jpg\n",
            "0\n",
            "[  0   0   0 ... 195 195 195]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "D5M3jzcqRi_j"
      },
      "source": [
        "## Cars Textual labels"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "MMQwt8NZWiDC",
        "outputId": "ab885dc3-2df1-46a5-d588-0fafa62f1e7e"
      },
      "source": [
        "mat_class_names = mat_cars_annos['class_names']\n",
        "\n",
        "car_class_names=[]\n",
        "\n",
        "for val in mat_class_names[0]:\n",
        "  car_class_names.append(val)\n",
        "print(len(car_class_names))"
      ],
      "execution_count": 119,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "196\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "b71i8-XEYh94"
      },
      "source": [
        "## Preparing and shuffling data"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "wKRQrJJMWCR_"
      },
      "source": [
        "# saving the filename array as .npy file\n",
        "np.save('filenames.npy', carfilenames)\n",
        "\n",
        "#import keras\n",
        "#from keras.utils import to_categorical\n",
        "\n",
        "# One hot vector representation of labels\n",
        "y_labels_one_hot = tf.keras.utils.to_categorical(carclassies,num_classes=196)\n",
        "\n",
        "# saving the y_labels_one_hot array as a .npy file\n",
        "np.save('y_labels_one_hot.npy', y_labels_one_hot)"
      ],
      "execution_count": 127,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "gP0ov6z7WxID"
      },
      "source": [
        "from sklearn.utils import shuffle\n",
        "\n",
        "filenames_shuffled, y_labels_one_hot_shuffled = shuffle(carfilenames, y_labels_one_hot)\n",
        "\n",
        "# saving the shuffled file.\n",
        "# you can load them later using np.load().\n",
        "np.save('y_labels_one_hot_shuffled.npy', y_labels_one_hot_shuffled)\n",
        "np.save('filenames_shuffled.npy', filenames_shuffled)"
      ],
      "execution_count": 128,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "hzemWt_8X7bf"
      },
      "source": [
        "from sklearn.model_selection import train_test_split"
      ],
      "execution_count": 129,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "7uoD9aorXWlR",
        "outputId": "43ab68e7-2770-4af8-c8be-11095f461278"
      },
      "source": [
        "# Used this line as our filename array is not a numpy array.\n",
        "filenames_shuffled_numpy = np.array(filenames_shuffled)\n",
        "\n",
        "X_train_filenames, X_val_filenames, y_train, y_val = train_test_split(\n",
        "    filenames_shuffled_numpy, y_labels_one_hot_shuffled, test_size=0.2, random_state=1)\n",
        "\n",
        "print(X_train_filenames.shape) # (3800,)\n",
        "print(y_train.shape)           # (3800, 12)\n",
        "train_size=X_train_filenames.shape[0]\n",
        "print(X_val_filenames.shape)   # (950,)\n",
        "print(y_val.shape)             # (950, 12)\n",
        "val_size=X_val_filenames.shape[0]\n",
        "# You can save these files as well. As you will be using them later for training and validation of your model.\n",
        "np.save('X_train_filenames.npy', X_train_filenames)\n",
        "np.save('y_train.npy', y_train)\n",
        "\n",
        "np.save('X_val_filenames.npy', X_val_filenames)\n",
        "np.save('y_val.npy', y_val)"
      ],
      "execution_count": 133,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "(12948,)\n",
            "(12948, 196)\n",
            "(3237,)\n",
            "(3237, 196)\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "aQRsGFXkba9L",
        "outputId": "e2c178f6-e878-481f-c0f5-236f07092c79"
      },
      "source": [
        "print(train_size)\n",
        "print(val_size)"
      ],
      "execution_count": 131,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "12948\n",
            "3237\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "weM5XxsWYsYD"
      },
      "source": [
        "## Custom generator"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "xfBuNPEaYrdU"
      },
      "source": [
        "class My_Custom_Generator(tf.keras.utils.Sequence) :\n",
        "  \n",
        "  def __init__(self, image_filenames, labels, batch_size) :\n",
        "    self.image_filenames = image_filenames\n",
        "    self.labels = labels\n",
        "    self.batch_size = batch_size\n",
        "    \n",
        "    \n",
        "  def __len__(self) :\n",
        "    return (np.ceil(len(self.image_filenames) / float(self.batch_size))).astype(np.int)\n",
        "  \n",
        "  \n",
        "  def __getitem__(self, idx) :\n",
        "    batch_x = self.image_filenames[idx * self.batch_size : (idx+1) * self.batch_size]\n",
        "    batch_y = self.labels[idx * self.batch_size : (idx+1) * self.batch_size]\n",
        "    \n",
        "    # return np.array([\n",
        "    #         np.resize(plt.imread('/content/' + str(file_name)), (80, 80, 3))\n",
        "    #            for file_name in batch_x])/255.0, np.array(batch_y)\n",
        "    return np.array([\n",
        "        tf.image.resize_with_pad(plt.imread('/content/' + str(file_name)),224, 224)\n",
        "            for file_name in batch_x])/255.0, np.array(batch_y)"
      ],
      "execution_count": 137,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "UEGZ0hpNnJq0"
      },
      "source": [
        "## ResNet Model"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "nzdvFnrzUgC1"
      },
      "source": [
        "def identity_block(xt, filter):\n",
        "    # copy tensor to variable called x_skip\n",
        "    xt_skip = xt\n",
        "    # Layer 1\n",
        "    xt = tf.keras.layers.Conv2D(filter, (3,3), padding = 'same')(xt)\n",
        "    xt = tf.keras.layers.BatchNormalization(axis=3)(xt)\n",
        "    xt = tf.keras.layers.Activation('relu')(xt)\n",
        "    # Layer 2\n",
        "    xt = tf.keras.layers.Conv2D(filter, (3,3), padding = 'same')(xt)\n",
        "    xt = tf.keras.layers.BatchNormalization(axis=3)(xt)\n",
        "    # Add Residue\n",
        "    xt = tf.keras.layers.Add()([xt, xt_skip])     \n",
        "    xt = tf.keras.layers.Activation('relu')(xt)\n",
        "    return xt"
      ],
      "execution_count": 94,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "3eDEx7p-VwP4"
      },
      "source": [
        "def convolutional_block(xt, filter):\n",
        "    # copy tensor to variable called xt_skip\n",
        "    xt_skip = xt\n",
        "    # Layer 1\n",
        "    xt = tf.keras.layers.Conv2D(filter, (3,3), padding = 'same', strides = (2,2))(xt)\n",
        "    xt = tf.keras.layers.BatchNormalization(axis=3)(xt)\n",
        "    xt = tf.keras.layers.Activation('relu')(xt)\n",
        "    # Layer 2\n",
        "    xt = tf.keras.layers.Conv2D(filter, (3,3), padding = 'same')(xt)\n",
        "    xt = tf.keras.layers.BatchNormalization(axis=3)(xt)\n",
        "    # Processing Residue with conv(1,1)\n",
        "    xt_skip = tf.keras.layers.Conv2D(filter, (1,1), strides = (2,2))(xt_skip)\n",
        "    # Add Residue\n",
        "    xt = tf.keras.layers.Add()([xt, xt_skip])     \n",
        "    xt = tf.keras.layers.Activation('relu')(xt)\n",
        "    return xt"
      ],
      "execution_count": 95,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "QSyV10qwWBjc"
      },
      "source": [
        "def ResNet18(shape = (224, 224, 3), classes = 196):\n",
        "    # Step 1 (Setup Input Layer)\n",
        "    xt_input = tf.keras.layers.Input(shape)\n",
        "    xt_aug= layers.experimental.preprocessing.RandomFlip(\"horizontal_and_vertical\")(xt_input)\n",
        "    xt_aug=layers.experimental.preprocessing.RandomRotation(0.2)(xt_aug)\n",
        "    #xt_input=data_aug(xt_input)\n",
        "    xt = tf.keras.layers.ZeroPadding2D((3, 3))(xt_aug)\n",
        "    #print('Setup layer')\n",
        "    #Step 2 (Initial Conv layer along with maxPool)\n",
        "    xt = tf.keras.layers.Conv2D(64, kernel_size=7, strides=2, padding='same')(xt)\n",
        "    xt = tf.keras.layers.BatchNormalization()(xt)\n",
        "    xt = tf.keras.layers.Activation('relu')(xt)\n",
        "    xt = tf.keras.layers.MaxPool2D(pool_size=3, strides=2, padding='same')(xt)\n",
        "    xt = identity_block(xt, 64)\n",
        "    xt = identity_block(xt, 64)\n",
        "    xt = convolutional_block(xt, 128)\n",
        "    xt = identity_block(xt, 128)\n",
        "    xt = convolutional_block(xt, 256)\n",
        "    xt = identity_block(xt, 256)\n",
        "    xt = convolutional_block(xt, 512)\n",
        "    xt = identity_block(xt, 512)\n",
        "\n",
        "    # Step 4 End Dense Network\n",
        "   # print(' prepare dense  layer')\n",
        "    xt = tf.keras.layers.AveragePooling2D((7,7), padding = 'same')(xt)\n",
        "    xt = tf.keras.layers.Flatten()(xt)\n",
        "    #print(' Start dense  layer')\n",
        "    xt = tf.keras.layers.Dense(512, activation = 'relu')(xt)\n",
        "    xt = tf.keras.layers.Dense(classes, activation = 'softmax')(xt)\n",
        "   # print('Finish')\n",
        "    model = tf.keras.models.Model(inputs = xt_input, outputs = xt, name = \"ResNet18\")\n",
        "    return model"
      ],
      "execution_count": 96,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "-F8RucRM78Fa"
      },
      "source": [
        "## Testing dtails for CUBS:\n",
        "https://towardsdatascience.com/how-to-vectorize-pairwise-dis-similarity-metrics-5d522715fb4e\n",
        "https://www.tensorflow.org/guide/tensor#indexing"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "UhQb0XKXxMm8"
      },
      "source": [
        "## Task3"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "zom_u4w9xLgX"
      },
      "source": [
        "def CUBS_block_1(xt_input):\n",
        "  xt=xt_input  \n",
        "  xt=tf.keras.layers.GlobalAveragePooling2D()(xt)\n",
        "  xt_GAP=xt\n",
        "  #dense\n",
        "  xt_dense_1 = tf.keras.layers.Dense(xt_GAP.shape[-1]*4, activation = 'relu')(xt)\n",
        "  xt_dense_2 = tf.keras.layers.Dense(xt_GAP.shape[-1]*4, activation = 'relu')(xt)\n",
        "  xt_dense_3 = tf.keras.layers.Dense(xt_GAP.shape[-1]*4, activation = 'relu')(xt)\n",
        "  #Similarity\n",
        "  xt_similarity=tf.math.abs( tf.math.subtract(xt_dense_1[:,:, None] , xt_dense_2[:,None, :]))\n",
        "  #softmax\n",
        "  xt_softmax = tf.nn.softmax(xt_similarity,axis=1)\n",
        "  #feature\n",
        "  xt=tf.math.reduce_max(xt_softmax,axis=1)\n",
        "  xt=xt*xt_dense_3\n",
        "  #dense\n",
        "  xt = tf.keras.layers.Dense(xt_GAP.shape[-1], activation = 'relu')(xt)\n",
        "  xt=tf.math.add(xt,xt_GAP)\n",
        "  \n",
        "  xt=tf.keras.layers.Activation('sigmoid')(xt)\n",
        "  \n",
        "  xt=tf.keras.layers.multiply([xt,xt_input])\n",
        "  return xt"
      ],
      "execution_count": 97,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "m9quN02txknJ"
      },
      "source": [
        "def CUBS_block_2(xt):\n",
        "  xt_input=xt  \n",
        "  xt_conv_1 = tf.keras.layers.SeparableConv2D(1,kernel_size=(1,1))(xt)\n",
        "  xt_conv_2 = tf.keras.layers.SeparableConv2D(1,kernel_size=(1,1))(xt)\n",
        "  xt_conv_3 = tf.keras.layers.SeparableConv2D(1,kernel_size=(1,1))(xt)\n",
        "\n",
        "  xt_conv_1=tf.keras.layers.Flatten()(xt_conv_1)\n",
        "  xt_conv_2=tf.keras.layers.Flatten()(xt_conv_2)\n",
        "  xt_conv_3=tf.keras.layers.Flatten()(xt_conv_3)\n",
        " \n",
        "  xt_similarity=tf.math.abs( tf.math.subtract(xt_conv_1[:,:, None] , xt_conv_2[:,None, :]))\n",
        "  #softmax\n",
        "  xt_softmax = tf.nn.softmax(xt_similarity,axis=1)\n",
        "  #feature\n",
        "  xt=tf.math.reduce_max(xt_softmax,axis=1)\n",
        "  xt=xt*xt_conv_3\n",
        "  \n",
        "  xt=tf.keras.layers.Activation('sigmoid')(xt)\n",
        "  xt=tf.reshape(xt,(-1,xt_input.shape[1],xt_input.shape[2],1))\n",
        "  xt=tf.keras.layers.multiply([xt,xt_input])\n",
        "\n",
        "  return xt"
      ],
      "execution_count": 98,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "w0CkHRec1Eo1"
      },
      "source": [
        "def CUBS_implementation_1_block(resblock,resfilter,xt_input):\n",
        "  xt=xt_input\n",
        "  xt=resblock(xt,resfilter)\n",
        "  xt_cubs1=CUBS_block_1(xt)\n",
        "  xt_cubs2=CUBS_block_2(xt)\n",
        "  xt = tf.keras.layers.Add()([xt_cubs1, xt_cubs2])\n",
        "  xt = tf.keras.layers.Add()([xt, xt_input])    \n",
        "\n",
        "  return xt"
      ],
      "execution_count": 99,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "nqxJfkfj1J07"
      },
      "source": [
        "def CUBS_implementation_1_block_conv(resblock,resfilter,xt_input):\n",
        "  xt=xt_input\n",
        "  xt_input = tf.keras.layers.Conv2D(resfilter, (1,1), strides = (2,2))(xt_input)\n",
        "  xt=resblock(xt,resfilter)\n",
        "  xt_cubs1=CUBS_block_1(xt)\n",
        "  xt_cubs2=CUBS_block_2(xt)\n",
        "  xt = tf.keras.layers.Add()([xt_cubs1, xt_cubs2])\n",
        "  xt = tf.keras.layers.Add()([xt, xt_input])    \n",
        "\n",
        "  return xt"
      ],
      "execution_count": 100,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "vRUsq30x1J07"
      },
      "source": [
        "def CUBS_implementation_2_block(resblock,resfilter,xt_input):\n",
        "  xt=xt_input\n",
        "  xt=resblock(xt,resfilter)\n",
        "  xt=CUBS_block_1(xt)\n",
        "  xt=CUBS_block_2(xt)\n",
        "  xt = tf.keras.layers.Add()([xt, xt_input])    \n",
        "\n",
        "  return xt"
      ],
      "execution_count": 101,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Ph71auxw1Eo8"
      },
      "source": [
        "def CUBS_implementation_2_block_conv(resblock,resfilter,xt_input):\n",
        "  xt=xt_input\n",
        "  xt_input = tf.keras.layers.Conv2D(resfilter, (1,1), strides = (2,2))(xt_input)\n",
        "  xt=resblock(xt,resfilter)\n",
        "  xt=CUBS_block_1(xt)\n",
        "  xt=CUBS_block_2(xt)\n",
        "  xt = tf.keras.layers.Add()([xt, xt_input])    \n",
        "\n",
        "  return xt"
      ],
      "execution_count": 102,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "NUSHgAV41Eo8"
      },
      "source": [
        "def CUBS_implementation_3_block(resblock,resfilter,xt_input):\n",
        "  xt=xt_input\n",
        "  xt=resblock(xt,resfilter)\n",
        "  xt=CUBS_block_2(xt)\n",
        "  xt=CUBS_block_1(xt)\n",
        "  xt = tf.keras.layers.Add()([xt, xt_input])       \n",
        "\n",
        "  return xt"
      ],
      "execution_count": 103,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "o3uL2ghs1J08"
      },
      "source": [
        "def CUBS_implementation_3_block_conv(resblock,resfilter,xt_input):\n",
        "  xt=xt_input\n",
        "  xt_input = tf.keras.layers.Conv2D(resfilter, (1,1), strides = (2,2))(xt_input)\n",
        "  xt=resblock(xt,resfilter)\n",
        "  xt=CUBS_block_2(xt)\n",
        "  xt=CUBS_block_1(xt)\n",
        "  xt = tf.keras.layers.Add()([xt, xt_input])       \n",
        "\n",
        "  return xt"
      ],
      "execution_count": 104,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "zL3rpglPyDQy"
      },
      "source": [
        "def CUBS_implementation_1(shape = (224, 224, 3), classes = 196):\n",
        "      # Step 1 (Setup Input Layer)\n",
        "    xt_input = tf.keras.layers.Input(shape)\n",
        "    xt_aug= layers.experimental.preprocessing.RandomFlip(\"horizontal_and_vertical\")(xt_input)\n",
        "    xt_aug=layers.experimental.preprocessing.RandomRotation(0.2)(xt_aug)\n",
        "    #xt_input=data_aug(xt_input)\n",
        "    xt = tf.keras.layers.ZeroPadding2D((3, 3))(xt_aug)\n",
        "    #print('Setup layer')\n",
        "    #Step 2 (Initial Conv layer along with maxPool)\n",
        "    xt = tf.keras.layers.Conv2D(64, kernel_size=7, strides=2, padding='same')(xt)\n",
        "    xt = tf.keras.layers.BatchNormalization()(xt)\n",
        "    xt = tf.keras.layers.Activation('relu')(xt)\n",
        "    xt = tf.keras.layers.MaxPool2D(pool_size=3, strides=2, padding='same')(xt)\n",
        "\n",
        "    xt=CUBS_implementation_1_block(identity_block,64,xt)\n",
        "    xt=CUBS_implementation_1_block(identity_block,64,xt)\n",
        "    xt=CUBS_implementation_1_block_conv(convolutional_block,128,xt)\n",
        "    xt=CUBS_implementation_1_block(identity_block,128,xt)\n",
        "    xt=CUBS_implementation_1_block_conv(convolutional_block,256,xt)\n",
        "    xt=CUBS_implementation_1_block(identity_block,256,xt)\n",
        "    xt=CUBS_implementation_1_block_conv(convolutional_block,512,xt)\n",
        "    xt=CUBS_implementation_1_block(identity_block,512,xt)\n",
        "\n",
        "    # Step 4 End Dense Network\n",
        "   # print(' prepare dense  layer')\n",
        "    xt = tf.keras.layers.AveragePooling2D((7,7), padding = 'same')(xt)\n",
        "    xt = tf.keras.layers.Flatten()(xt)\n",
        "    #print(' Start dense  layer')\n",
        "    xt = tf.keras.layers.Dense(512, activation = 'relu')(xt)\n",
        "    xt = tf.keras.layers.Dense(classes, activation = 'softmax')(xt)\n",
        "   # print('Finish')\n",
        "    model = tf.keras.models.Model(inputs = xt_input, outputs = xt, name = \"CUBSI1\")\n",
        "    return model"
      ],
      "execution_count": 105,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "0kjyJ5vpyN1i"
      },
      "source": [
        "def CUBS_implementation_2(shape = (224, 224, 3), classes = 196):\n",
        "      # Step 1 (Setup Input Layer)\n",
        "    xt_input = tf.keras.layers.Input(shape)\n",
        "    xt_aug= layers.experimental.preprocessing.RandomFlip(\"horizontal_and_vertical\")(xt_input)\n",
        "    xt_aug=layers.experimental.preprocessing.RandomRotation(0.2)(xt_aug)\n",
        "    #xt_input=data_aug(xt_input)\n",
        "    xt = tf.keras.layers.ZeroPadding2D((3, 3))(xt_aug)\n",
        "    #print('Setup layer')\n",
        "    #Step 2 (Initial Conv layer along with maxPool)\n",
        "    xt = tf.keras.layers.Conv2D(64, kernel_size=7, strides=2, padding='same')(xt)\n",
        "    xt = tf.keras.layers.BatchNormalization()(xt)\n",
        "    xt = tf.keras.layers.Activation('relu')(xt)\n",
        "    xt = tf.keras.layers.MaxPool2D(pool_size=3, strides=2, padding='same')(xt)\n",
        "\n",
        "    xt=CUBS_implementation_2_block(identity_block,64,xt)\n",
        "    xt=CUBS_implementation_2_block(identity_block,64,xt)\n",
        "    xt=CUBS_implementation_2_block_conv(convolutional_block,128,xt)\n",
        "    xt=CUBS_implementation_2_block(identity_block,128,xt)\n",
        "    xt=CUBS_implementation_2_block_conv(convolutional_block,256,xt)\n",
        "    xt=CUBS_implementation_2_block(identity_block,256,xt)\n",
        "    xt=CUBS_implementation_2_block_conv(convolutional_block,512,xt)\n",
        "    xt=CUBS_implementation_2_block(identity_block,512,xt)\n",
        "\n",
        "    # Step 4 End Dense Network\n",
        "   # print(' prepare dense  layer')\n",
        "    xt = tf.keras.layers.AveragePooling2D((7,7), padding = 'same')(xt)\n",
        "    xt = tf.keras.layers.Flatten()(xt)\n",
        "    #print(' Start dense  layer')\n",
        "    xt = tf.keras.layers.Dense(512, activation = 'relu')(xt)\n",
        "    xt = tf.keras.layers.Dense(classes, activation = 'softmax')(xt)\n",
        "   # print('Finish')\n",
        "    model = tf.keras.models.Model(inputs = xt_input, outputs = xt, name = \"ResNet18\")\n",
        "    return model"
      ],
      "execution_count": 106,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "7B14Eho9yOdY"
      },
      "source": [
        "def CUBS_implementation_3(shape = (224, 224, 3), classes = 196):\n",
        "      # Step 1 (Setup Input Layer)\n",
        "    xt_input = tf.keras.layers.Input(shape)\n",
        "    xt_aug= layers.experimental.preprocessing.RandomFlip(\"horizontal_and_vertical\")(xt_input)\n",
        "    xt_aug=layers.experimental.preprocessing.RandomRotation(0.2)(xt_aug)\n",
        "    #xt_input=data_aug(xt_input)\n",
        "    xt = tf.keras.layers.ZeroPadding2D((3, 3))(xt_aug)\n",
        "    #print('Setup layer')\n",
        "    #Step 2 (Initial Conv layer along with maxPool)\n",
        "    xt = tf.keras.layers.Conv2D(64, kernel_size=7, strides=2, padding='same')(xt)\n",
        "    xt = tf.keras.layers.BatchNormalization()(xt)\n",
        "    xt = tf.keras.layers.Activation('relu')(xt)\n",
        "    xt = tf.keras.layers.MaxPool2D(pool_size=3, strides=2, padding='same')(xt)\n",
        "\n",
        "    xt=CUBS_implementation_3_block(identity_block,64,xt)\n",
        "    xt=CUBS_implementation_3_block(identity_block,64,xt)\n",
        "    xt=CUBS_implementation_3_block_conv(convolutional_block,128,xt)\n",
        "    xt=CUBS_implementation_3_block(identity_block,128,xt)\n",
        "    xt=CUBS_implementation_3_block_conv(convolutional_block,256,xt)\n",
        "    xt=CUBS_implementation_3_block(identity_block,256,xt)\n",
        "    xt=CUBS_implementation_3_block_conv(convolutional_block,512,xt)\n",
        "    xt=CUBS_implementation_3_block(identity_block,512,xt)\n",
        "\n",
        "    # Step 4 End Dense Network\n",
        "   # print(' prepare dense  layer')\n",
        "    xt = tf.keras.layers.AveragePooling2D((7,7), padding = 'same')(xt)\n",
        "    xt = tf.keras.layers.Flatten()(xt)\n",
        "    #print(' Start dense  layer')\n",
        "    xt = tf.keras.layers.Dense(512, activation = 'relu')(xt)\n",
        "    xt = tf.keras.layers.Dense(classes, activation = 'softmax')(xt)\n",
        "   # print('Finish')\n",
        "    model = tf.keras.models.Model(inputs = xt_input, outputs = xt, name = \"ResNet18\")\n",
        "    return model"
      ],
      "execution_count": 107,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "1Hr-CKgwtQIq"
      },
      "source": [
        "## CallBacks"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "EcaINiLftXvt"
      },
      "source": [
        "earlystopping=tf.keras.callbacks.EarlyStopping(monitor='val_loss', \n",
        "                                min_delta=0, \n",
        "                                patience=30, \n",
        "                                verbose=0, \n",
        "                                mode='auto', \n",
        "                                baseline=None, \n",
        "                                restore_best_weights=False)\n",
        "modelchecpoint=tf.keras.callbacks.ModelCheckpoint('/content/model-{epoch:02d}-{val_loss:0.2f}', \n",
        "                                     monitor='val_loss', \n",
        "                                     verbose=0, \n",
        "                                     save_best_only=True,\n",
        "                                     save_weights_only=False, \n",
        "                                     mode='auto', \n",
        "                                     save_freq='epoch')"
      ],
      "execution_count": 108,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "MgcQce64tTqK"
      },
      "source": [
        "## Model and metrics"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "XG3ekKp_aIWJ"
      },
      "source": [
        "batch_size = 32\n",
        "\n",
        "my_training_batch_generator = My_Custom_Generator(X_train_filenames, y_train, batch_size)\n",
        "my_validation_batch_generator = My_Custom_Generator(X_val_filenames, y_val, batch_size)"
      ],
      "execution_count": 138,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "X0IgDkagYzf5"
      },
      "source": [
        "#modell = ResNet18()\n",
        "modell=CUBS_implementation_1()\n",
        "#modell=CUBS_implementation_2()\n",
        "#modell=CUBS_implementation_3()\n",
        "modell.compile(optimizer = 'adam', \n",
        "               loss='categorical_crossentropy', \n",
        "               metrics = ['accuracy',keras.metrics.Precision(), keras.metrics.Recall()],\n",
        "               run_eagerly=False\n",
        "               )\n",
        "\n",
        "#modell.summary()"
      ],
      "execution_count": 110,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "_-PVzd9ZX1GB"
      },
      "source": [
        "def visualize_results(history):\n",
        "  figure = plt.figure(figsize=(15, 10))\n",
        "  plt.subplot(211)\n",
        "  plt.title('Cross Entropy Loss')\n",
        "  plt.plot(history.history['loss'], color='blue', label='train')\n",
        "  plt.plot(history.history['val_loss'], color='orange', label='test')\n",
        "  # plot accuracy\n",
        "  plt.subplot(212)\n",
        "  plt.title('Classification Accuracy')\n",
        "  plt.plot(history.history['accuracy'], color='blue', label='train')\n",
        "  plt.plot(history.history['val_accuracy'], color='orange', label='test')"
      ],
      "execution_count": 111,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "XvgsUghzZJG1",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 791
        },
        "outputId": "e63ca6db-e103-4828-8496-8e3e4821d88c"
      },
      "source": [
        "history = modell.fit_generator(\n",
        "                    generator=my_training_batch_generator,\n",
        "                    steps_per_epoch=int(train_size//batch_size),\n",
        "                   \n",
        "                    validation_data=my_validation_batch_generator,\n",
        "                     callbacks=[earlystopping,modelchecpoint], \n",
        "                     validation_steps=int(val_size//batch_size),                   \n",
        "                     epochs = 200)\n",
        "visualize_results(history)"
      ],
      "execution_count": 141,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/keras/engine/training.py:1972: UserWarning: `Model.fit_generator` is deprecated and will be removed in a future version. Please use `Model.fit`, which supports generators.\n",
            "  warnings.warn('`Model.fit_generator` is deprecated and '\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Epoch 1/200\n"
          ]
        },
        {
          "output_type": "error",
          "ename": "ResourceExhaustedError",
          "evalue": "ignored",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mResourceExhaustedError\u001b[0m                    Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-141-ae37abfbc66c>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      6\u001b[0m                      \u001b[0mcallbacks\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mearlystopping\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mmodelchecpoint\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      7\u001b[0m                      \u001b[0mvalidation_steps\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mval_size\u001b[0m\u001b[0;34m//\u001b[0m\u001b[0mbatch_size\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 8\u001b[0;31m                      epochs = 200)\n\u001b[0m\u001b[1;32m      9\u001b[0m \u001b[0mvisualize_results\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mhistory\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.7/dist-packages/keras/engine/training.py\u001b[0m in \u001b[0;36mfit_generator\u001b[0;34m(self, generator, steps_per_epoch, epochs, verbose, callbacks, validation_data, validation_steps, validation_freq, class_weight, max_queue_size, workers, use_multiprocessing, shuffle, initial_epoch)\u001b[0m\n\u001b[1;32m   1987\u001b[0m         \u001b[0muse_multiprocessing\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0muse_multiprocessing\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1988\u001b[0m         \u001b[0mshuffle\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mshuffle\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1989\u001b[0;31m         initial_epoch=initial_epoch)\n\u001b[0m\u001b[1;32m   1990\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1991\u001b[0m   \u001b[0;34m@\u001b[0m\u001b[0mdoc_controls\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdo_not_generate_docs\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.7/dist-packages/keras/engine/training.py\u001b[0m in \u001b[0;36mfit\u001b[0;34m(self, x, y, batch_size, epochs, verbose, callbacks, validation_split, validation_data, shuffle, class_weight, sample_weight, initial_epoch, steps_per_epoch, validation_steps, validation_batch_size, validation_freq, max_queue_size, workers, use_multiprocessing)\u001b[0m\n\u001b[1;32m   1182\u001b[0m                 _r=1):\n\u001b[1;32m   1183\u001b[0m               \u001b[0mcallbacks\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mon_train_batch_begin\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mstep\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1184\u001b[0;31m               \u001b[0mtmp_logs\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mtrain_function\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0miterator\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1185\u001b[0m               \u001b[0;32mif\u001b[0m \u001b[0mdata_handler\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mshould_sync\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1186\u001b[0m                 \u001b[0mcontext\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0masync_wait\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.7/dist-packages/tensorflow/python/eager/def_function.py\u001b[0m in \u001b[0;36m__call__\u001b[0;34m(self, *args, **kwds)\u001b[0m\n\u001b[1;32m    883\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    884\u001b[0m       \u001b[0;32mwith\u001b[0m \u001b[0mOptionalXlaContext\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_jit_compile\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 885\u001b[0;31m         \u001b[0mresult\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_call\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwds\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    886\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    887\u001b[0m       \u001b[0mnew_tracing_count\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mexperimental_get_tracing_count\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.7/dist-packages/tensorflow/python/eager/def_function.py\u001b[0m in \u001b[0;36m_call\u001b[0;34m(self, *args, **kwds)\u001b[0m\n\u001b[1;32m    915\u001b[0m       \u001b[0;31m# In this case we have created variables on the first call, so we run the\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    916\u001b[0m       \u001b[0;31m# defunned version which is guaranteed to never create variables.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 917\u001b[0;31m       \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_stateless_fn\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwds\u001b[0m\u001b[0;34m)\u001b[0m  \u001b[0;31m# pylint: disable=not-callable\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    918\u001b[0m     \u001b[0;32melif\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_stateful_fn\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    919\u001b[0m       \u001b[0;31m# Release the lock early so that multiple threads can perform the call\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.7/dist-packages/tensorflow/python/eager/function.py\u001b[0m in \u001b[0;36m__call__\u001b[0;34m(self, *args, **kwargs)\u001b[0m\n\u001b[1;32m   3038\u001b[0m        filtered_flat_args) = self._maybe_define_function(args, kwargs)\n\u001b[1;32m   3039\u001b[0m     return graph_function._call_flat(\n\u001b[0;32m-> 3040\u001b[0;31m         filtered_flat_args, captured_inputs=graph_function.captured_inputs)  # pylint: disable=protected-access\n\u001b[0m\u001b[1;32m   3041\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   3042\u001b[0m   \u001b[0;34m@\u001b[0m\u001b[0mproperty\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.7/dist-packages/tensorflow/python/eager/function.py\u001b[0m in \u001b[0;36m_call_flat\u001b[0;34m(self, args, captured_inputs, cancellation_manager)\u001b[0m\n\u001b[1;32m   1962\u001b[0m       \u001b[0;31m# No tape is watching; skip to running the function.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1963\u001b[0m       return self._build_call_outputs(self._inference_function.call(\n\u001b[0;32m-> 1964\u001b[0;31m           ctx, args, cancellation_manager=cancellation_manager))\n\u001b[0m\u001b[1;32m   1965\u001b[0m     forward_backward = self._select_forward_and_backward_functions(\n\u001b[1;32m   1966\u001b[0m         \u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.7/dist-packages/tensorflow/python/eager/function.py\u001b[0m in \u001b[0;36mcall\u001b[0;34m(self, ctx, args, cancellation_manager)\u001b[0m\n\u001b[1;32m    594\u001b[0m               \u001b[0minputs\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    595\u001b[0m               \u001b[0mattrs\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mattrs\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 596\u001b[0;31m               ctx=ctx)\n\u001b[0m\u001b[1;32m    597\u001b[0m         \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    598\u001b[0m           outputs = execute.execute_with_cancellation(\n",
            "\u001b[0;32m/usr/local/lib/python3.7/dist-packages/tensorflow/python/eager/execute.py\u001b[0m in \u001b[0;36mquick_execute\u001b[0;34m(op_name, num_outputs, inputs, attrs, ctx, name)\u001b[0m\n\u001b[1;32m     58\u001b[0m     \u001b[0mctx\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mensure_initialized\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     59\u001b[0m     tensors = pywrap_tfe.TFE_Py_Execute(ctx._handle, device_name, op_name,\n\u001b[0;32m---> 60\u001b[0;31m                                         inputs, attrs, num_outputs)\n\u001b[0m\u001b[1;32m     61\u001b[0m   \u001b[0;32mexcept\u001b[0m \u001b[0mcore\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_NotOkStatusException\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     62\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0mname\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;31mResourceExhaustedError\u001b[0m: 2 root error(s) found.\n  (0) Resource exhausted:  OOM when allocating tensor with shape[32,2048,2048] and type float on /job:localhost/replica:0/task:0/device:GPU:0 by allocator GPU_0_bfc\n\t [[node CUBSI1/tf.nn.softmax_46/Softmax (defined at <ipython-input-115-ae37abfbc66c>:8) ]]\nHint: If you want to see a list of allocated tensors when OOM happens, add report_tensor_allocations_upon_oom to RunOptions for current allocation info. This isn't available when running in Eager mode.\n\n\t [[assert_greater_equal_1/Assert/AssertGuard/pivot_f/_23/_199]]\nHint: If you want to see a list of allocated tensors when OOM happens, add report_tensor_allocations_upon_oom to RunOptions for current allocation info. This isn't available when running in Eager mode.\n\n  (1) Resource exhausted:  OOM when allocating tensor with shape[32,2048,2048] and type float on /job:localhost/replica:0/task:0/device:GPU:0 by allocator GPU_0_bfc\n\t [[node CUBSI1/tf.nn.softmax_46/Softmax (defined at <ipython-input-115-ae37abfbc66c>:8) ]]\nHint: If you want to see a list of allocated tensors when OOM happens, add report_tensor_allocations_upon_oom to RunOptions for current allocation info. This isn't available when running in Eager mode.\n\n0 successful operations.\n0 derived errors ignored. [Op:__inference_train_function_40247]\n\nFunction call stack:\ntrain_function -> train_function\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "4YBUWSGoRwZy"
      },
      "source": [
        "modell.save('content/saved_model/my_model2')"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "6g2ApHi2m0-k"
      },
      "source": [
        "modell.evaluate(x_val,y_val)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "pVRXh4A3mjID"
      },
      "source": [
        "## Utilities or unused code"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "UkbnKBAknE5Q"
      },
      "source": [
        "## Data preparation"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "lz28o5y1DqSS"
      },
      "source": [
        "# data and their labels \n",
        "x = []\n",
        "y = []\n",
        "for features, label in training_data:\n",
        "  x.append(features)\n",
        "  y.append(label)\n",
        "\n",
        "# Gray Scale --> Color\n",
        "x = np.array(x).reshape(-1,64,64,3)\n",
        "y= np.array(y)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Zz1BCa2xN_Bb"
      },
      "source": [
        "import random\n",
        "split=0.2\n",
        "yt=np.argmax(y, axis=1)\n",
        "yt=np.expand_dims(yt,1)\n",
        "\n",
        "size_of_array=len(x)\n",
        "x_train=[]\n",
        "y_train=[]\n",
        "x_test=[]\n",
        "y_test=[]\n",
        "val_index=random.sample(range(size_of_array), int((float(size_of_array)*split)))\n",
        "val_truth_array=np.zeros((size_of_array,1), dtype=int)\n",
        "\n",
        "for i in range(len(val_index)):\n",
        "  val_truth_array[val_index[i]]=1\n",
        "\n",
        "for i in range(size_of_array):\n",
        "  if val_truth_array[i]:\n",
        "    x_test.append(x[i])\n",
        "    y_test.append(yt[i])\n",
        "  else:\n",
        "    x_train.append(x[i])\n",
        "    y_train.append(yt[i])\n",
        "x_train=np.array(x_train)\n",
        "y_train=np.array(y_train)\n",
        "x_test=np.array(x_test)\n",
        "y_test=np.array(y_test)\n",
        "# print(len(x_train))\n",
        "# print(len(y_train)) \n",
        "# print(len(x_test)) \n",
        "# print(len(y_test))\n",
        "#y_val=np.argmax(y_val, axis=0)    \n",
        "y_train=tf.one_hot(y_train,200,axis=1)\n",
        "y_train=y_train[:,:,0]\n",
        "y_val=tf.one_hot(y_val,200,axis=1)\n",
        "y_val=y_val[:,:,0]\n",
        "y_test=tf.one_hot(y_test,200,axis=1)\n",
        "y_test=y_test[:,:,0]"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "9CUZ1hj2NcSj"
      },
      "source": [
        "## TinyImageNEt Dataset"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "fkrR2Eb6C-4R",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "9592afaf-9a58-4b4b-eade-f8ff7ad6cfd7"
      },
      "source": [
        "# Download the data\n",
        "import os.path\n",
        "# Check if the file exists \n",
        "file_tag = os.path.exists('tiny-imagenet-200.zip')\n",
        "if (file_tag == False):\n",
        "  !wget http://cs231n.stanford.edu/tiny-imagenet-200.zip\n",
        "  !unzip -q tiny-imagenet-200.zip && ls tiny-imagenet-200"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "--2021-10-29 09:38:21--  http://cs231n.stanford.edu/tiny-imagenet-200.zip\n",
            "Resolving cs231n.stanford.edu (cs231n.stanford.edu)... 171.64.68.10\n",
            "Connecting to cs231n.stanford.edu (cs231n.stanford.edu)|171.64.68.10|:80... connected.\n",
            "HTTP request sent, awaiting response... 200 OK\n",
            "Length: 248100043 (237M) [application/zip]\n",
            "Saving to: ‘tiny-imagenet-200.zip’\n",
            "\n",
            "tiny-imagenet-200.z 100%[===================>] 236.61M  44.4MB/s    in 4.5s    \n",
            "\n",
            "2021-10-29 09:38:26 (52.3 MB/s) - ‘tiny-imagenet-200.zip’ saved [248100043/248100043]\n",
            "\n",
            "test  train  val  wnids.txt  words.txt\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "eizlmLUWDBAQ"
      },
      "source": [
        "# Trianing data \n",
        "Data = \"/content/tiny-imagenet-200/train\"\n",
        "# Check for categories\n",
        "Categories = os.listdir(\"/content/tiny-imagenet-200/train\")"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "-Mb9SxuTDLuC"
      },
      "source": [
        "file1 = open('/content/tiny-imagenet-200/wnids.txt', 'r')\n",
        "Lines = file1.readlines()\n",
        "wnid = [x.strip('\\n') for x in Lines]"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "eU9WqagsDOFL"
      },
      "source": [
        "training_data = []\n",
        "class_dict = {}\n",
        "class_id = [0]*len(wnid)\n",
        "def create_training_data():\n",
        "  for i in range(len(Categories)):\n",
        "    path = os.path.join(Data,Categories[i],\"images\")\n",
        "    # print(class_name)\n",
        "    class_num = Categories.index(Categories[i])\n",
        "    # print(class_num)\n",
        "    j=0\n",
        "    while j < len(wnid):\n",
        "      if Categories[i] == wnid[j]:\n",
        "        class_id[j] = 1\n",
        "      else:\n",
        "        class_id[j] = 0\n",
        "      j+=1\n",
        "    class_dict[Categories[i]] = class_id.copy()\n",
        "    for img in os.listdir(path):\n",
        "      # Convert Img cmap from bgr to rgb\n",
        "      imgs = cv2.imread(os.path.join(path,img),cv2.COLOR_BGR2RGB)\n",
        "      imgs = cv2.cvtColor(imgs, cv2.COLOR_BGR2RGB)\n",
        "      training_data.append([imgs,class_dict[Categories[i]]])\n",
        "\n",
        "create_training_data()"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "3xf9BDvZDRyY"
      },
      "source": [
        "ValData ='/content/tiny-imagenet-200/val/'\n",
        "import os\n",
        "import tensorflow as tf\n",
        "import matplotlib.pyplot as plt\n",
        "from tensorflow.python.framework import ops\n",
        "from tensorflow.python.framework import dtypes\n",
        "import numpy as np\n",
        "\n",
        "\n",
        "#File containing the path to images and the labels [path/to/images label]\n",
        "filename = ValData+'val_annotations.txt'\n",
        "\n",
        "#Lists where to store the paths and labels\n",
        "filenames = []\n",
        "labels = []\n",
        "\n",
        "#Reading file and extracting paths and labels\n",
        "with open(filename, 'r') as File:\n",
        "    infoFile = File.readlines() #Reading all the lines from File\n",
        "    for line in infoFile: #Reading line-by-line\n",
        "        words = line.split(\"\\t\",3) #Splitting lines in words using space character as separator\n",
        "        filenames.append('/content/tiny-imagenet-200/val/images/'+words[0])\n",
        "        labels.append(words[1])\n",
        "\n",
        "#NumFiles = len(filenames)\n",
        "tempImages=[]\n",
        "templabelsNumerical =[]\n",
        "class_names = wnid\n",
        "for i in range(len(filenames)):\n",
        "  raw = tf.io.read_file(filenames[i])\n",
        "  image = tf.image.decode_jpeg(raw, channels=3)\n",
        "  tempImages.append(image)\n",
        "  templabelsNumerical.append(class_names.index(labels[i]))\n",
        "  \n",
        "x_val=np.array(tempImages)\n",
        "y_val_num=np.array(templabelsNumerical)  \n",
        "y_val=[]\n",
        "for value in range(len(y_val_num)):\n",
        "\tnumb = [0 for _ in range(200)]\n",
        "  \n",
        "\tnumb[y_val_num[value]] = 1\n",
        "  \n",
        "\ty_val.append(numb)\n",
        "y_val=np.array(y_val)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "ftzHXoo1nq39"
      },
      "source": [
        "\n",
        "\n",
        "\n",
        "## Data augmentation"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "sxLOihQXNhz8"
      },
      "source": [
        "## Cars196 old"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "zDRFU26m5hIM"
      },
      "source": [
        ""
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "5Wily02LPrij",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "3a67bc58-480a-476d-9f08-fa5235793412"
      },
      "source": [
        "#tensorflow-dataset 4.4.0 version needed\n",
        "#check with: !pip list\n",
        "!pip install tfds-nightly --upgrade\n"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Collecting tfds-nightly\n",
            "  Downloading tfds_nightly-4.4.0.dev202110310106-py3-none-any.whl (4.0 MB)\n",
            "\u001b[K     |████████████████████████████████| 4.0 MB 7.4 MB/s \n",
            "\u001b[?25hRequirement already satisfied: absl-py in /usr/local/lib/python3.7/dist-packages (from tfds-nightly) (0.12.0)\n",
            "Requirement already satisfied: six in /usr/local/lib/python3.7/dist-packages (from tfds-nightly) (1.15.0)\n",
            "Requirement already satisfied: tqdm in /usr/local/lib/python3.7/dist-packages (from tfds-nightly) (4.62.3)\n",
            "Requirement already satisfied: dill in /usr/local/lib/python3.7/dist-packages (from tfds-nightly) (0.3.4)\n",
            "Requirement already satisfied: promise in /usr/local/lib/python3.7/dist-packages (from tfds-nightly) (2.3)\n",
            "Requirement already satisfied: numpy in /usr/local/lib/python3.7/dist-packages (from tfds-nightly) (1.19.5)\n",
            "Requirement already satisfied: protobuf>=3.12.2 in /usr/local/lib/python3.7/dist-packages (from tfds-nightly) (3.17.3)\n",
            "Requirement already satisfied: termcolor in /usr/local/lib/python3.7/dist-packages (from tfds-nightly) (1.1.0)\n",
            "Requirement already satisfied: tensorflow-metadata in /usr/local/lib/python3.7/dist-packages (from tfds-nightly) (1.2.0)\n",
            "Requirement already satisfied: future in /usr/local/lib/python3.7/dist-packages (from tfds-nightly) (0.16.0)\n",
            "Requirement already satisfied: requests>=2.19.0 in /usr/local/lib/python3.7/dist-packages (from tfds-nightly) (2.23.0)\n",
            "Requirement already satisfied: importlib-resources in /usr/local/lib/python3.7/dist-packages (from tfds-nightly) (5.2.2)\n",
            "Requirement already satisfied: typing-extensions in /usr/local/lib/python3.7/dist-packages (from tfds-nightly) (3.7.4.3)\n",
            "Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.7/dist-packages (from requests>=2.19.0->tfds-nightly) (2021.5.30)\n",
            "Requirement already satisfied: chardet<4,>=3.0.2 in /usr/local/lib/python3.7/dist-packages (from requests>=2.19.0->tfds-nightly) (3.0.4)\n",
            "Requirement already satisfied: idna<3,>=2.5 in /usr/local/lib/python3.7/dist-packages (from requests>=2.19.0->tfds-nightly) (2.10)\n",
            "Requirement already satisfied: urllib3!=1.25.0,!=1.25.1,<1.26,>=1.21.1 in /usr/local/lib/python3.7/dist-packages (from requests>=2.19.0->tfds-nightly) (1.24.3)\n",
            "Requirement already satisfied: zipp>=3.1.0 in /usr/local/lib/python3.7/dist-packages (from importlib-resources->tfds-nightly) (3.6.0)\n",
            "Requirement already satisfied: googleapis-common-protos<2,>=1.52.0 in /usr/local/lib/python3.7/dist-packages (from tensorflow-metadata->tfds-nightly) (1.53.0)\n",
            "Installing collected packages: tfds-nightly\n",
            "Successfully installed tfds-nightly-4.4.0.dev202110310106\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "a6xTfn1-Roty"
      },
      "source": [
        "Info on Dataset library:https://www.tensorflow.org/datasets/overview"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 248,
          "referenced_widgets": [
            "b2e289dcaff7450d92b0bb436e562d76",
            "bb4a3ce04c2641278b04624b6dce66e9",
            "2ce000c2846f496e885a71cf69260c8d",
            "6a1097d066444669bf685aae3b4df3f0",
            "312b802b37694e11a4cd82782bebe336",
            "41dc1097eae54be69d3046aed2d56be2",
            "d42038fe53f24e75b85f2271eb34119a",
            "ff39aef18aac4b31af45cdc6f9bb6f86",
            "6ad444104dd348c295454e4e8f20bc28",
            "339b62cff9cc46638da5f7c73f9b9fcd",
            "59cef6ba2aa240eb91720e924e8eab2d",
            "df32d1583679495d82dcd63f9ee496c3",
            "e0685bdbc447439281fb68d00f270aa0",
            "a29ca925cd7f4ee099a97ee78c2357eb",
            "737799e5bd514992b9cee6003c917ed0",
            "6064239efdee43a09f2746bf9fedae6e",
            "92f84539e04b47d3b67b63fd9607a32c",
            "f4dba0dadedc4c4b9725f6c92f1520bb",
            "0131386f1f0b41228c854e9167909e06",
            "4041af98134a4792bc92250d951cf6fc",
            "c7fd2c89a3ac465b9da7af18c0779e3f",
            "5da111a66ed04427816b2de40d5151bb",
            "63282a6e1a6247099301bec8388dedee",
            "e07590b26af24a3486443ba44838d203",
            "2007812013b14769ba0e9f671440a387",
            "79f3063f594240b195c378ca4280d6e1",
            "523a02eeaaab4c459a6083635b54ee0d",
            "e195c11e078c491fb4afff0bbc7de4af",
            "aa08b5532ef640198c1293e4015e73e6",
            "9e609c26c993433887e6b8ef9e665452",
            "e926301007564608b7274c0ff027cd4c",
            "47aeb48ec1904cf8a9ec84934a5ea7c5",
            "8548c0d948324d9c8636a3d40a8b5950",
            "2e244e03ed8d40ab9cee8706020e62a3",
            "465314a8105c405291a0f3681afe7453",
            "ac7596f960c743258ae13a8c83d362bd",
            "6a033b4e674d43e3ab6874ecf41ce625",
            "49e379c4c2db46a5a96c7b8e30599d42",
            "68f212226758460baf6f754cae72ed62",
            "1b6ee733d6ab44e0a9b64f96172a047a",
            "d70db000b4654af7a654fdb561deb6ee",
            "7caeaae3f5fa4797877e916d1cca7f81",
            "8706246e6a3d40239955a05e7deec914",
            "9ad0db6c4dca4213a9d3113370bc123a",
            "c3c7fde76c734602ae0e9e993a65fddd",
            "dd4d380517a7494f82ea68803897a7a5",
            "515b036dbbf94ae2a782b299d75307bf",
            "075b53778c5848d1bcb420000dfb1b01",
            "662266d9f82e476283abd4ceb71ec403",
            "248ee428bc1e414caf5fb19991dc2f88",
            "5c72d6f3876c455b8c5ea9e4a60941e9",
            "cbb484eeace546e4b073f74c2dd4071a",
            "d4888c874d97478793367283b74c4fac",
            "cd55de81d80b4f468c346726327f911c",
            "05a5ad2bf6d6400e9071d83a39fc6429",
            "21914865f1514784af030827ccff9927",
            "d3e0f4b14fe6441486aa655c93d343af",
            "f2b8069b2f0a495ebd8a8f802e1087c8",
            "cc347b8cdd454106b6e5936100474515",
            "e21e25ade55c4c768f3923e3f0bf4192",
            "97254e89361c4e8d865bf3f9fcdf8b20",
            "286e64a347ef4bd281e0eed195ec8a0b",
            "f3e70d1ae25243cca261d888930ebab3",
            "506efa3e7b4042038749e8c09e3b650d",
            "28e43cb6e1a14dfb8c7216d2b9691d7d",
            "c7122cee512a455996c145100800e50f",
            "29c985ca26c7456e89959cd254e18395",
            "07f86d9bce0544f59d8cb33cd07517e7"
          ]
        },
        "id": "aYE6irD2IwM9",
        "outputId": "bfb9bd9c-24a4-4902-a61f-a7a840e03e7f"
      },
      "source": [
        "import tensorflow_datasets as tfds\n",
        "(trainCars196,validCars196,testCars196), metaData =tfds.load('cars196',data_dir='~/content/cars196',download=True,split=['train[:80%]','train[:80%]','test'],with_info=True)\n",
        "print(len(trainCars196))\n"
      ],
      "execution_count": null,
      "outputs": [
        {
          "metadata": {
            "tags": null
          },
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "\u001b[1mDownloading and preparing dataset Unknown size (download: Unknown size, generated: Unknown size, total: Unknown size) to /root/content/cars196/cars196/2.0.1...\u001b[0m\n"
          ]
        },
        {
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "b2e289dcaff7450d92b0bb436e562d76",
              "version_major": 2,
              "version_minor": 0
            },
            "text/plain": [
              "Dl Completed...: 0 url [00:00, ? url/s]"
            ]
          },
          "metadata": {},
          "output_type": "display_data"
        },
        {
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "df32d1583679495d82dcd63f9ee496c3",
              "version_major": 2,
              "version_minor": 0
            },
            "text/plain": [
              "Dl Size...: 0 MiB [00:00, ? MiB/s]"
            ]
          },
          "metadata": {},
          "output_type": "display_data"
        },
        {
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "63282a6e1a6247099301bec8388dedee",
              "version_major": 2,
              "version_minor": 0
            },
            "text/plain": [
              "Extraction completed...: 0 file [00:00, ? file/s]"
            ]
          },
          "metadata": {},
          "output_type": "display_data"
        },
        {
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "2e244e03ed8d40ab9cee8706020e62a3",
              "version_major": 2,
              "version_minor": 0
            },
            "text/plain": [
              "Generating splits...:   0%|          | 0/2 [00:00<?, ? splits/s]"
            ]
          },
          "metadata": {},
          "output_type": "display_data"
        },
        {
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "c3c7fde76c734602ae0e9e993a65fddd",
              "version_major": 2,
              "version_minor": 0
            },
            "text/plain": [
              "Generating train examples...: 0 examples [00:00, ? examples/s]"
            ]
          },
          "metadata": {},
          "output_type": "display_data"
        },
        {
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "21914865f1514784af030827ccff9927",
              "version_major": 2,
              "version_minor": 0
            },
            "text/plain": [
              "Shuffling cars196-train.tfrecord...:   0%|          | 0/8144 [00:00<?, ? examples/s]"
            ]
          },
          "metadata": {},
          "output_type": "display_data"
        },
        {
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "d3e0f4b14fe6441486aa655c93d343af",
              "version_major": 2,
              "version_minor": 0
            },
            "text/plain": [
              "Generating test examples...: 0 examples [00:00, ? examples/s]"
            ]
          },
          "metadata": {},
          "output_type": "display_data"
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "f2b8069b2f0a495ebd8a8f802e1087c8",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "Shuffling cars196-test.tfrecord...:   0%|          | 0/8041 [00:00<?, ? examples/s]"
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\u001b[1mDataset cars196 downloaded and prepared to /root/content/cars196/cars196/2.0.1. Subsequent calls will reuse this data.\u001b[0m\n",
            "6515\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Fo0UAtqe0iC9",
        "outputId": "935e5846-4183-4714-82a7-491f139c8fda"
      },
      "source": [
        "print(len(trainCars196))\n",
        "print(len(validCars196))\n",
        "print(len(testCars196))\n"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "6515\n",
            "6515\n",
            "8041\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "GqZIpD1cSQVA"
      },
      "source": [
        "ds = trainCars196.take(2)  # Only take a single example\n",
        "\n",
        "for example in ds:  # example is `{'image': tf.Tensor, 'label': tf.Tensor}`\n",
        "  print(list(example.keys()))\n",
        "  image = example[\"image\"]\n",
        "  label = example[\"label\"]\n",
        "  print(image.shape, label)\n",
        " "
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "l3yOT8MwWVwa"
      },
      "source": [
        " tfds.as_dataframe(trainCars196.take(10), metaData)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 333
        },
        "id": "aMSRbbYpWL1Q",
        "outputId": "6a416de3-a475-4840-db6f-c973bbcb4a8e"
      },
      "source": [
        "fig = tfds.show_examples(trainCars196.take(4), metaData)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 648x648 with 4 Axes>"
            ]
          },
          "metadata": {},
          "output_type": "display_data"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "rJJtp1CJXyKI"
      },
      "source": [
        "# import tensorflow as tf\n",
        "# ex=trainCars196.take(1)\n",
        "# tf.image.draw_bounding_boxes(\n",
        "#     ex[1], boxes, colors, name=None\n",
        "# )"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "X9HYUGMvnq3-"
      },
      "source": [
        "# Data Augmentation\n",
        "data_augmentation = tf.keras.Sequential([\n",
        "  layers.RandomFlip(\"horizontal_and_vertical\"),\n",
        "  layers.RandomRotation(0.2),\n",
        "])"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "slp8AtSTnq3-"
      },
      "source": [
        "# Data rescale and resize\n",
        "IMG_SIZE = 64\n",
        "\n",
        "resize_and_rescale = tf.keras.Sequential([\n",
        "  layers.Resizing(IMG_SIZE, IMG_SIZE),\n",
        "  layers.Rescaling(1./255)\n",
        "])"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "75LUcGJFnq3-"
      },
      "source": [
        "x_train_aug=[]\n",
        "y_train_aug=[]\n",
        "\n",
        "for j in range(2):\n",
        "  x_train_aug.append(data_augmentation(x_train))\n",
        "  y_train_aug.append(y_train)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "tzpkMkjtnq3-"
      },
      "source": [
        "print(x_train_aug)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 575
        },
        "id": "yrb9AlSPnq3-",
        "outputId": "0e529c88-66db-4a2e-ccf7-eaa88e1471d8"
      },
      "source": [
        "plt.figure(figsize=(10, 10))\n",
        "for i in range(9):\n",
        "  augmented_image = data_augmentation(x)\n",
        "  ax = plt.subplot(3, 3, i + 1)\n",
        "  plt.imshow(augmented_image[1])\n",
        "  plt.axis(\"off\")"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 720x720 with 9 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 286
        },
        "id": "YMggB3_6nq3-",
        "outputId": "c50ed2fc-b89c-4987-ce6e-ee9014a83dc7"
      },
      "source": [
        "#print(augmented_image)\n",
        "plt.imshow(augmented_image[1])"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.image.AxesImage at 0x7fe9ee0cb610>"
            ]
          },
          "metadata": {},
          "execution_count": 18
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 168
        },
        "id": "N9v0DFuxnq3-",
        "outputId": "9d0b0a60-981a-4a86-a78f-ef5e3bc25086"
      },
      "source": [
        "image_labels(x_train,y_train,0,'/content/tiny-imagenet-200/')"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "error",
          "ename": "NameError",
          "evalue": "ignored",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-14-c771ea081804>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mimage_labels\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mx_train\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0my_train\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m'/content/tiny-imagenet-200/'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m",
            "\u001b[0;31mNameError\u001b[0m: name 'image_labels' is not defined"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "xbGPg9g0wSSk"
      },
      "source": [
        "def image_labels (x_array,y_array,image_number,path_to_tiny):\n",
        "  #Make dictionary with for labels\n",
        "  def get_class_to_id_dict(pathToTinyImagenet):\n",
        "    id_dict = {}\n",
        "    for i, line in enumerate(open(pathToTinyImagenet+'wnids.txt', 'r')):\n",
        "        id_dict[line.replace('\\n', '')] = i\n",
        "    all_classes = {}\n",
        "    result = {}\n",
        "    for i, line in enumerate(open(pathToTinyImagenet+'words.txt', 'r')):\n",
        "        n_id, word = line.split('\\t')[:2]\n",
        "        all_classes[n_id] = word\n",
        "    for key, value in id_dict.items():\n",
        "        result[value] = (key, all_classes[key])      \n",
        "    return result\n",
        "  Class_dictionary=get_class_to_id_dict(path_to_tiny)\n",
        "  #print image\n",
        "  import matplotlib.pyplot as plt\n",
        "  plt.imshow(x_array[image_number])\n",
        "  #Class_number=np.argmax(y_array[image_number], axis=0)\n",
        "  Class_number=y_array[image_number][0]\n",
        "  # print(y_array.shape)\n",
        "  # print(Class_number)\n",
        "  # print(Class_number)\n",
        "  Class_code=class_names[Class_number]\n",
        "  plt.title(Class_code)\n",
        "#get Class code from dictionary\n",
        "  itemsList = Class_dictionary.items()\n",
        "  keysList=[]\n",
        "  for item in itemsList:\n",
        "      if item[1][0] == Class_code:\n",
        "          keysList.append(item[1][1])\n",
        "\n",
        "  print(keysList)\n",
        "  print(Class_number)\n",
        "  print(y_array[image_number])\n"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 228
        },
        "id": "sakLWwbWjC5w",
        "outputId": "630ee219-630b-42ee-82db-14dfe60dc10c"
      },
      "source": [
        "#Old loading Car data\n",
        "cartempImages=[]\n",
        "templabelsNumerical =[]\n",
        "class_names = car_class_names\n",
        "for i in range(len(carfilenames)-10000):\n",
        "#for i in range(10):\n",
        "  #print(i)\n",
        "  raw = tf.io.read_file(carfilenames[i])\n",
        "  image = tf.image.decode_jpeg(raw, channels=3)\n",
        "  cartempImages.append(image)\n",
        "  #templabelsNumerical.append(class_names.index(labels[i]))\n",
        "  \n",
        "x_val=np.array(cartempImages)\n",
        "y_val_num=np.array(carclassies)  \n",
        "y_val=[]\n",
        "for value in range(len(y_val_num)):\n",
        "\tnumb = [0 for _ in range(196)]\n",
        "  \n",
        "\tnumb[y_val_num[value]] = 1\n",
        "  \n",
        "\ty_val.append(numb)\n",
        "y_val=np.array(y_val)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "error",
          "ename": "NameError",
          "evalue": "ignored",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-1-d2a2116bf8f3>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0mcartempImages\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[0mtemplabelsNumerical\u001b[0m \u001b[0;34m=\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 3\u001b[0;31m \u001b[0mclass_names\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mcar_class_names\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      4\u001b[0m \u001b[0;32mfor\u001b[0m \u001b[0mi\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mrange\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mlen\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mcarfilenames\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m-\u001b[0m\u001b[0;36m10000\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m \u001b[0;31m#for i in range(10):\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;31mNameError\u001b[0m: name 'car_class_names' is not defined"
          ]
        }
      ]
    }
  ]
}
